generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id
  username        String?
  github_id       Int?      @unique
  email           String
  name            String?
  password        String?
  profile_picture String?   @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png")
  agent           Agent?
  sessions        Session[]
}

model Agent {
  id     String @id
  userId String @unique
  name   String
  user   User   @relation(fields: [userId], references: [id])
  bot    Bot?
}

model Bot {
  id                   String    @id
  agentId              String    @unique
  chatBotTitle         String
  welcomeMessage       String
  widgetColor          String
  collectVisitorInfo   Boolean
  widgetButtonPosition String
  fontFamily           String
  fontUrl              String
  convoStarters        String[]
  profileDescription   String
  placeholder          String
  style                String
  showPopupText        Boolean
  popupText            String
  expandByDefault      Boolean
  removePoweredBy      Boolean
  chatIsLocked         Boolean
  typingMessage        String
  userId               String
  botInteractions      Int       @default(0)
  agent                Agent     @relation(fields: [agentId], references: [id])
  visitors             Visitor[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  email     String
  name      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Visitor {
  id        Int      @id @default(autoincrement())
  botId     String?
  name      String?
  email     String?
  createdAt DateTime @default(now())
  bot       Bot?     @relation(fields: [botId], references: [id])
}
